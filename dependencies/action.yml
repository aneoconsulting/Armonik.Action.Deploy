name: "Install ArmoniK dependencies"
description: "Action to install dependencies required to deploy or use ArmoniK"
inputs:
  aws:
    description: "Install dependencies for AWS"
    required: false
    default: false
  docker:
    description: "Install docker"
    required: false
    default: false
  k3s:
    description: "Install K3s"
    required: false
    default: false
  terraform:
    description: "Install Terraform"
    required: true
    default: false

runs:
  using: composite
  steps:
    - name: Install common dependencies
      shell: bash
      run: |
        set -ex
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release jq python3 python-is-python3 python3-pip
    - if: ${{ inputs.terraform }}
      name: Install Terraform
      shell: bash
      run: |
        set -ex
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt install -y terraform
    - if: ${{ inputs.docker }}
      name: Install Docker
      shell: bash
      run: |
        set -ex
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        sudo groupadd -f docker
        sudo usermod -aG docker "$USER"
        newgrp docker

        sudo systemctl enable docker.service
        sudo systemctl enable containerd.service

        docker run hello-world
        
    - if: ${{ inputs.k3s }}
      name: Install K3s
      shell: bash
      run: |
        set -ex
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.23.8+k3s1" sh -s - --write-kubeconfig-mode 644 --docker --write-kubeconfig ~/.kube/config
    - name: Install Kubectl
      shell: bash
      run: |
        set -ex
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
        echo "$(cat kubectl.sha256) kubectl" | sha256sum --check
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl